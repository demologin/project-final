---
version: "3.9"
services:
  nginx:
    image: "${NGINX_IMAGE}:${NGINX_IMAGE_VERSION}"
    restart: "always"
    ports:
      - "80:${NGINX_OUT_PORT}"
      - "443:${NGINX_OUT_HTTPS_PORT}"
    volumes:
      - "${NGINX_CONFIG_PATH}:/etc/nginx/conf.d/default.conf"
    networks:
      - ext_net
      - int_net
    depends_on:
      - app
  db:
    image: "${DB_IMAGE}:${DB_IMAGE_VERSION}"
    restart: "always"
    ports:
      - "5432:${DB_OUT_PORT}"
    volumes:
      - "${DB_VOLUME_PATH}:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - int_net
    healthcheck:
      test: [ "CMD-SHELL", "'pg_isready -U ${DB_USER} -d ${DB_NAME}'" ]
      interval: 5s
      timeout: 5s
      retries: 5
  app:
    build:
      context: .
      args:
        - APP_IMAGE=${MVN_IMAGE}:${MVN_VERSION}
        - PROJECT_DIR=${PROJECT_DIR}
        - APP_OUT_PORT=${APP_OUT_PORT}
      dockerfile: Dockerfile
    env_file: ./config/application.env
    restart: "always"
    environment:
      - SPRING_DATASOURCE_URL=${DB_SOURCE_URL}:${DB_OUT_PORT}/${DB_NAME}
    ports:
      - "8080:${APP_OUT_PORT}"
    networks:
      - int_net
    depends_on:
      - db
networks:
  #External network
  ext_net:
  #Internal-only network
  int_net:
    internal: true
...